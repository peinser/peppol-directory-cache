pid /tmp/nginx.pid;

http {
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=peppol_cache:50m max_size=5g use_temp_path=off;

    log_format custom '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     'Cache-Status: $upstream_cache_status '
                     'Request-URI: $request_uri '
                     'Cache-Control: $http_cache_control';

    access_log /var/logs/nginx/access.log custom;
    error_log /var/logs/nginx/error.log debug;

    gzip on;
    gzip_types application/json;
    gzip_min_length 256;
    gzip_comp_level 6;

    server {
        listen 8000;

        # Normalized cache key (without scheme)
        set_by_lua_block $normalized_cache_key {
            local function sort_query_params(query)
                if not query or query == "" then
                    return ""
                end
                local params = {}
                for k, v in string.gmatch(query, "([^&=]+)=([^&]*)") do
                    table.insert(params, k .. "=" .. v)
                end
                table.sort(params)
                return table.concat(params, "&")
            end
            local uri = ngx.var.request_uri
            local path = uri:match("^[^?]*") or uri
            local query = uri:match("%?(.*)$") or ""
            local sorted_query = sort_query_params(query)
            return path .. (sorted_query ~= "" and "?" .. sorted_query or "")
        }

        # Cache settings
        proxy_cache peppol_cache;
        proxy_cache_key $normalized_cache_key;
        proxy_cache_valid 200 365d; # Cache all responses for a year
        proxy_ignore_headers Cache-Control Expires;

        location / {
            proxy_pass https://directory.peppol.eu/search/1.0/json;
            add_header X-Cache-Status $upstream_cache_status;
        }

        location /.info/healthz {
            return 200 'All Gucci';
            add_header Content-Type text/plain;
        }
    }
}

events {
    worker_connections 1024;
}